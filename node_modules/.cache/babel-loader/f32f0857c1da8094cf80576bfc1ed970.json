{"ast":null,"code":"var _jsxFileName = \"/Users/sameer/nishant/newfolder/react-weather-app/src/components/Header/Header.tsx\";\nimport React from 'react';\nimport { ReactComponent as GithubIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/github.svg\";\nimport { GithubLink, HeaderContainer, Title, HeaderIconsContainer } from './styed';\nimport { useDispatch, useSelector } from 'react-redux';\nimport DarkModeToggle from 'react-dark-mode-toggle';\nimport { toggleDarkMode } from '../../store/reducers/appReducer';\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const isDarkMode = useSelector(state => state.app.darkMode);\n  return /*#__PURE__*/React.createElement(HeaderContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, \"React Weather\"), /*#__PURE__*/React.createElement(HeaderIconsContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DarkModeToggle, {\n    checked: isDarkMode,\n    onChange: () => dispatch(toggleDarkMode()),\n    size: 60,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(GithubLink, {\n    href: \"https://github.com/nishantjerry/weather-app-nishant\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GithubIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Header;","map":{"version":3,"sources":["/Users/sameer/nishant/newfolder/react-weather-app/src/components/Header/Header.tsx"],"names":["React","GithubLink","HeaderContainer","Title","HeaderIconsContainer","useDispatch","useSelector","DarkModeToggle","toggleDarkMode","Header","dispatch","isDarkMode","state","app","darkMode"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,UAAT,EAAqBC,eAArB,EAAsCC,KAAtC,EAA6CC,oBAA7C,QAAyE,SAAzE;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AAEA,SAASC,cAAT,QAA+B,iCAA/B;;AAEA,MAAMC,MAAgB,GAAG,MAAM;AAC7B,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,UAAU,GAAGL,WAAW,CAAEM,KAAD,IAAqBA,KAAK,CAACC,GAAN,CAAUC,QAAhC,CAA9B;AAEA,sBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAgB,IAAA,OAAO,EAAEH,UAAzB;AAAqC,IAAA,QAAQ,EAAE,MAAMD,QAAQ,CAACF,cAAc,EAAf,CAA7D;AAAiF,IAAA,IAAI,EAAE,EAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,qDAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CAFF,CADF;AAWD,CAfD;;AAiBA,eAAeC,MAAf","sourcesContent":["import React from 'react';\nimport { ReactComponent as GithubIcon } from '../../assets/github.svg';\nimport { GithubLink, HeaderContainer, Title, HeaderIconsContainer } from './styed';\nimport { useDispatch, useSelector } from 'react-redux';\nimport DarkModeToggle from 'react-dark-mode-toggle';\nimport { AppStore } from '../../store/store';\nimport { toggleDarkMode } from '../../store/reducers/appReducer';\n\nconst Header: React.FC = () => {\n  const dispatch = useDispatch();\n  const isDarkMode = useSelector((state: AppStore) => state.app.darkMode);\n\n  return (\n    <HeaderContainer>\n      <Title>React Weather</Title>\n      <HeaderIconsContainer>\n        <DarkModeToggle checked={isDarkMode} onChange={() => dispatch(toggleDarkMode())} size={60} />\n        <GithubLink href=\"https://github.com/nishantjerry/weather-app-nishant\">\n          <GithubIcon />\n        </GithubLink>\n      </HeaderIconsContainer>\n    </HeaderContainer>\n  );\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}