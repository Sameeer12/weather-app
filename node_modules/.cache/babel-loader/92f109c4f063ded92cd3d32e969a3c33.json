{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { TempUnit } from '../../utils/unitConversion';\nconst initialState = {\n  tempUnit: TempUnit.CELCIUS,\n  isLoading: false,\n  isInitial: true,\n  darkMode: JSON.parse(localStorage.getItem('darkMode'))\n};\nconst appSlice = createSlice({\n  name: 'app',\n  initialState,\n  reducers: {\n    toggleDarkMode: state => {\n      localStorage.setItem('darkMode', (!state.darkMode).toString());\n      state.darkMode = !state.darkMode;\n    },\n    changeTempUnit: state => {\n      state.tempUnit = state.tempUnit === TempUnit.CELCIUS ? TempUnit.FAHRENHEIT : TempUnit.CELCIUS;\n    },\n    setIsLoading: (state, action) => {\n      state.isLoading = action.payload;\n    },\n    setIsInitial: (state, action) => {\n      state.isInitial = action.payload;\n    }\n  }\n});\nexport const {\n  changeTempUnit,\n  toggleDarkMode,\n  setIsLoading,\n  setIsInitial\n} = appSlice.actions;\nexport default appSlice.reducer;","map":{"version":3,"sources":["/Users/sameer/nishant/newfolder/react-weather-app/src/store/reducers/appReducer.ts"],"names":["createSlice","TempUnit","initialState","tempUnit","CELCIUS","isLoading","isInitial","darkMode","JSON","parse","localStorage","getItem","appSlice","name","reducers","toggleDarkMode","state","setItem","toString","changeTempUnit","FAHRENHEIT","setIsLoading","action","payload","setIsInitial","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AACA,SAASC,QAAT,QAAyB,4BAAzB;AASA,MAAMC,YAAuB,GAAG;AAC9BC,EAAAA,QAAQ,EAAEF,QAAQ,CAACG,OADW;AAE9BC,EAAAA,SAAS,EAAE,KAFmB;AAG9BC,EAAAA,SAAS,EAAE,IAHmB;AAI9BC,EAAAA,QAAQ,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX;AAJoB,CAAhC;AAOA,MAAMC,QAAQ,GAAGZ,WAAW,CAAC;AAC3Ba,EAAAA,IAAI,EAAE,KADqB;AAE3BX,EAAAA,YAF2B;AAG3BY,EAAAA,QAAQ,EAAE;AACRC,IAAAA,cAAc,EAAGC,KAAD,IAAsB;AACpCN,MAAAA,YAAY,CAACO,OAAb,CAAqB,UAArB,EAAiC,CAAC,CAACD,KAAK,CAACT,QAAR,EAAkBW,QAAlB,EAAjC;AACAF,MAAAA,KAAK,CAACT,QAAN,GAAiB,CAACS,KAAK,CAACT,QAAxB;AACD,KAJO;AAKRY,IAAAA,cAAc,EAAGH,KAAD,IAAsB;AACpCA,MAAAA,KAAK,CAACb,QAAN,GAAiBa,KAAK,CAACb,QAAN,KAAmBF,QAAQ,CAACG,OAA5B,GAAsCH,QAAQ,CAACmB,UAA/C,GAA4DnB,QAAQ,CAACG,OAAtF;AACD,KAPO;AAQRiB,IAAAA,YAAY,EAAE,CAACL,KAAD,EAAmBM,MAAnB,KAAsD;AAClEN,MAAAA,KAAK,CAACX,SAAN,GAAkBiB,MAAM,CAACC,OAAzB;AACD,KAVO;AAWRC,IAAAA,YAAY,EAAE,CAACR,KAAD,EAAmBM,MAAnB,KAAsD;AAClEN,MAAAA,KAAK,CAACV,SAAN,GAAkBgB,MAAM,CAACC,OAAzB;AACD;AAbO;AAHiB,CAAD,CAA5B;AAoBA,OAAO,MAAM;AAAEJ,EAAAA,cAAF;AAAkBJ,EAAAA,cAAlB;AAAkCM,EAAAA,YAAlC;AAAgDG,EAAAA;AAAhD,IAAiEZ,QAAQ,CAACa,OAAhF;AACP,eAAeb,QAAQ,CAACc,OAAxB","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { TempUnit } from '../../utils/unitConversion';\n\nexport interface IAppState {\n  tempUnit: TempUnit;\n  isLoading: boolean;\n  isInitial: boolean;\n  darkMode: boolean;\n}\n\nconst initialState: IAppState = {\n  tempUnit: TempUnit.CELCIUS,\n  isLoading: false,\n  isInitial: true,\n  darkMode: JSON.parse(localStorage.getItem('darkMode') as string) as boolean,\n};\n\nconst appSlice = createSlice({\n  name: 'app',\n  initialState,\n  reducers: {\n    toggleDarkMode: (state: IAppState) => {\n      localStorage.setItem('darkMode', (!state.darkMode).toString());\n      state.darkMode = !state.darkMode;\n    },\n    changeTempUnit: (state: IAppState) => {\n      state.tempUnit = state.tempUnit === TempUnit.CELCIUS ? TempUnit.FAHRENHEIT : TempUnit.CELCIUS;\n    },\n    setIsLoading: (state: IAppState, action: PayloadAction<boolean>) => {\n      state.isLoading = action.payload;\n    },\n    setIsInitial: (state: IAppState, action: PayloadAction<boolean>) => {\n      state.isInitial = action.payload;\n    },\n  },\n});\n\nexport const { changeTempUnit, toggleDarkMode, setIsLoading, setIsInitial } = appSlice.actions;\nexport default appSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}