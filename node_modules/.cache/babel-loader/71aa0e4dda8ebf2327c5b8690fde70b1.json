{"ast":null,"code":"var _jsxFileName = \"/Users/sameer/nishant/newfolder/react-weather-app/src/components/Forecast/Forecast.tsx\";\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport ForecastItem from './ForecastItem';\nimport { ForecastContainer, ForecastItems, SectionTitle } from './styled';\n\nconst Forecast = () => {\n  const {\n    forecast,\n    isInitial\n  } = useSelector(state => ({\n    loading: state.app.isLoading,\n    isInitial: state.app.isInitial,\n    forecast: state.weather.extendedWeatherData\n  }));\n  if (isInitial) return /*#__PURE__*/React.createElement(React.Fragment, null);\n  return /*#__PURE__*/React.createElement(ForecastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SectionTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, \"Extended Forecast\"), /*#__PURE__*/React.createElement(ForecastItems, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, forecast.map((item, i) => {\n    return /*#__PURE__*/React.createElement(ForecastItem, {\n      key: i,\n      day: item.day,\n      high: item.temp.temp_max,\n      low: item.temp.temp_min,\n      weatherCode: item.weather.id,\n      main: item.weather.main,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    });\n  })));\n};\n\nexport default Forecast;","map":{"version":3,"sources":["/Users/sameer/nishant/newfolder/react-weather-app/src/components/Forecast/Forecast.tsx"],"names":["React","useSelector","ForecastItem","ForecastContainer","ForecastItems","SectionTitle","Forecast","forecast","isInitial","state","loading","app","isLoading","weather","extendedWeatherData","map","item","i","day","temp","temp_max","temp_min","id","main"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,iBAAT,EAA4BC,aAA5B,EAA2CC,YAA3C,QAA+D,UAA/D;;AAEA,MAAMC,QAAkB,GAAG,MAAM;AAC/B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA0BP,WAAW,CAAEQ,KAAD,KAAsB;AAChEC,IAAAA,OAAO,EAAED,KAAK,CAACE,GAAN,CAAUC,SAD6C;AAEhEJ,IAAAA,SAAS,EAAEC,KAAK,CAACE,GAAN,CAAUH,SAF2C;AAGhED,IAAAA,QAAQ,EAAEE,KAAK,CAACI,OAAN,CAAcC;AAHwC,GAAtB,CAAD,CAA3C;AAMA,MAAIN,SAAJ,EAAe,oBAAO,yCAAP;AAEf,sBACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QAAQ,CAACQ,GAAT,CAAa,CAACC,IAAD,EAAOC,CAAP,KAAa;AACzB,wBACE,oBAAC,YAAD;AACE,MAAA,GAAG,EAAEA,CADP;AAEE,MAAA,GAAG,EAAED,IAAI,CAACE,GAFZ;AAGE,MAAA,IAAI,EAAEF,IAAI,CAACG,IAAL,CAAUC,QAHlB;AAIE,MAAA,GAAG,EAAEJ,IAAI,CAACG,IAAL,CAAUE,QAJjB;AAKE,MAAA,WAAW,EAAEL,IAAI,CAACH,OAAL,CAAaS,EAL5B;AAME,MAAA,IAAI,EAAEN,IAAI,CAACH,OAAL,CAAaU,IANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUD,GAXA,CADH,CAFF,CADF;AAmBD,CA5BD;;AA8BA,eAAejB,QAAf","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { AppStore } from '../../store/store';\nimport ForecastItem from './ForecastItem';\nimport { ForecastContainer, ForecastItems, SectionTitle } from './styled';\n\nconst Forecast: React.FC = () => {\n  const { forecast, isInitial } = useSelector((state: AppStore) => ({\n    loading: state.app.isLoading,\n    isInitial: state.app.isInitial,\n    forecast: state.weather.extendedWeatherData,\n  }));\n\n  if (isInitial) return <></>;\n\n  return (\n    <ForecastContainer>\n      <SectionTitle>Extended Forecast</SectionTitle>\n      <ForecastItems>\n        {forecast.map((item, i) => {\n          return (\n            <ForecastItem\n              key={i}\n              day={item.day}\n              high={item.temp.temp_max}\n              low={item.temp.temp_min}\n              weatherCode={item.weather.id}\n              main={item.weather.main}\n            />\n          );\n        })}\n      </ForecastItems>\n    </ForecastContainer>\n  );\n};\n\nexport default Forecast;\n"]},"metadata":{},"sourceType":"module"}